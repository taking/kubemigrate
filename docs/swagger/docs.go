// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "github.com/taking/kubemigrate/issues",
            "email": "taking@duck.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/helm/chart/{name}": {
            "get": {
                "description": "Get specific Helm chart by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Get Helm Chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'default', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Chart Release version",
                        "name": "version",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Uninstall Helm chart by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Uninstall Helm Chart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'default', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Dry run mode",
                        "name": "dryrun",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/helm/chart/{name}/status": {
            "get": {
                "description": "Check if Helm chart is installed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Check Chart Installation Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chart name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/helm/charts": {
            "get": {
                "description": "Get list of all Helm charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Get Helm Charts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'default', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/helm/health": {
            "post": {
                "description": "Test Helm connection with provided configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Helm Connection Test",
                "parameters": [
                    {
                        "description": "Helm configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.HelmConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/kubernetes/health": {
            "post": {
                "description": "Test Kubernetes connection with provided configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubernetes"
                ],
                "summary": "Kubernetes Connection Test",
                "parameters": [
                    {
                        "description": "Kubernetes configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.KubeConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/kubernetes/{kind}/{name}": {
            "get": {
                "description": "Get Kubernetes resources by kind, name (optional) and namespace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubernetes"
                ],
                "summary": "Get Kubernetes Resources",
                "parameters": [
                    {
                        "description": "Kubernetes configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.KubeConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Resource kind (pods, configmaps, secrets, storage-classes)",
                        "name": "kind",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name (empty for list, specific name for single resource)",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'default', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/minio/bucket/create": {
            "post": {
                "description": "Create a new MinIO bucket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "minio"
                ],
                "summary": "Create Bucket",
                "parameters": [
                    {
                        "description": "MinIO configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MinioConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/minio/bucket/create-if-not-exists": {
            "post": {
                "description": "Create a MinIO bucket if it doesn't exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "minio"
                ],
                "summary": "Create Bucket If Not Exists",
                "parameters": [
                    {
                        "description": "MinIO configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MinioConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/minio/bucket/exists": {
            "post": {
                "description": "Check if a MinIO bucket exists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "minio"
                ],
                "summary": "2. Check Bucket Exists",
                "parameters": [
                    {
                        "description": "MinIO configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MinioConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "bucket",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/minio/health": {
            "post": {
                "description": "Test MinIO connection with provided configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "minio"
                ],
                "summary": "1. MinIO Connection Test",
                "parameters": [
                    {
                        "description": "MinIO configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.MinioConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/backups": {
            "post": {
                "description": "Get list of Velero backups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Get Backups",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'velero', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/health": {
            "post": {
                "description": "Test Velero connection with provided configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero Connection Test",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/pod-volume-restores": {
            "get": {
                "description": "Get list of Velero pod volume restores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Get Pod Volume Restores",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'velero', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/repositories": {
            "get": {
                "description": "Get list of Velero backup repositories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Get Backup Repositories",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'velero', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/restores": {
            "post": {
                "description": "Get list of Velero restores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Get Restores",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'velero', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/storage-locations": {
            "get": {
                "description": "Get list of Velero backup storage locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Get Backup Storage Locations",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'velero', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/velero/volume-snapshot-locations": {
            "get": {
                "description": "Get list of Velero volume snapshot locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Get Volume Snapshot Locations",
                "parameters": [
                    {
                        "description": "Velero configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.VeleroConfig"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Namespace name (default: 'velero', all namespaces: 'all')",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.HelmConfig": {
            "type": "object",
            "required": [
                "kubeconfig"
            ],
            "properties": {
                "kubeconfig": {
                    "$ref": "#/definitions/config.KubeConfig"
                }
            }
        },
        "config.KubeConfig": {
            "type": "object",
            "required": [
                "kubeconfig"
            ],
            "properties": {
                "kubeconfig": {
                    "description": "[필수] Base64 인코딩된 KubeConfig 값",
                    "type": "string",
                    "example": "base64 인코딩된 KubeConfig 값"
                }
            }
        },
        "config.MinioConfig": {
            "type": "object",
            "required": [
                "accessKey",
                "endpoint",
                "secretKey"
            ],
            "properties": {
                "accessKey": {
                    "description": "[필수] minio accessKey",
                    "type": "string",
                    "example": "your_minio_accessKey"
                },
                "endpoint": {
                    "description": "[필수] minio endpoint 주소",
                    "type": "string",
                    "example": "127.0.0.1:9000"
                },
                "secretKey": {
                    "description": "[필수] minio secretKey",
                    "type": "string",
                    "example": "your_minio_secretKey"
                },
                "useSSL": {
                    "description": "[필수] minio useSSL 여부 (false: http / true: https)",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "config.VeleroConfig": {
            "type": "object",
            "required": [
                "kubeconfig",
                "minio"
            ],
            "properties": {
                "kubeconfig": {
                    "$ref": "#/definitions/config.KubeConfig"
                },
                "minio": {
                    "$ref": "#/definitions/config.MinioConfig"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "에러 코드 (예: \"VALIDATION_FAILED\", \"CONNECTION_FAILED\")",
                    "type": "string"
                },
                "details": {
                    "description": "상세 에러 정보 (선택적)",
                    "type": "string"
                },
                "message": {
                    "description": "사용자 친화적인 에러 메시지",
                    "type": "string"
                },
                "request_id": {
                    "description": "요청 추적용 ID (선택적)",
                    "type": "string"
                },
                "status": {
                    "description": "항상 \"error\"",
                    "type": "string"
                },
                "timestamp": {
                    "description": "에러 발생 시각",
                    "type": "string"
                }
            }
        },
        "response.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "응답 데이터 (선택적)"
                },
                "message": {
                    "description": "성공 메시지 (선택적)",
                    "type": "string"
                },
                "request_id": {
                    "description": "요청 추적용 ID (선택적)",
                    "type": "string"
                },
                "status": {
                    "description": "항상 \"success\"",
                    "type": "string"
                },
                "timestamp": {
                    "description": "응답 생성 시각",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "KubeMigrate API Server",
	Description:      "Kubernetes cluster migration and backup validation API with multi-cluster support",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
