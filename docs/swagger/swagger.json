{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Kubernetes cluster migration and backup validation API with multi-cluster support",
        "title": "KubeMigrate API Server",
        "contact": {
            "name": "API Support",
            "url": "github.com/taking/kubemigrate/issues",
            "email": "taking@duck.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9091",
    "basePath": "/api/v1",
    "paths": {
        "/helm/chart_check": {
            "post": {
                "description": "Check if specified Helm chart is installed using KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Check if Helm chart is installed",
                "parameters": [
                    {
                        "description": "Helm chart check configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.HelmConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart status retrieved",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/helm/health": {
            "get": {
                "description": "Validate Helm connection using KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "helm"
                ],
                "summary": "Check Helm connection",
                "parameters": [
                    {
                        "description": "Helm connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.KubeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection successful",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/kube/health": {
            "get": {
                "description": "Validate Kubernetes connection using KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubernetes"
                ],
                "summary": "Kubernetes 연결 상태 확인",
                "parameters": [
                    {
                        "description": "Kubernetes connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.KubeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection successful",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/kube/pods": {
            "get": {
                "description": "Retrieve pod list from Kubernetes using KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubernetes"
                ],
                "summary": "Kubernetes pod 목록 조회",
                "parameters": [
                    {
                        "description": "Kubernetes connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.KubeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/kube/storage-classes": {
            "get": {
                "description": "Retrieve storage class list from Kubernetes using KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kubernetes"
                ],
                "summary": "Kubernetes storage class 목록 조회",
                "parameters": [
                    {
                        "description": "Kubernetes connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.KubeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/minio/bucket_check": {
            "post": {
                "description": "Create Minio bucket if it doesn't exist using MinioConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "minio"
                ],
                "summary": "Minio 버킷 생성 여부 확인",
                "parameters": [
                    {
                        "description": "Minio configuration with bucket name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.MinioConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bucket created or already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/minio/health": {
            "get": {
                "description": "Validate Minio connection using MinioConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "minio"
                ],
                "summary": "Minio 연결 상태 확인",
                "parameters": [
                    {
                        "description": "Minio connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.MinioConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection successful",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/velero/backup-repositories": {
            "get": {
                "description": "Retrieve Velero backup repository list using MinioConfig and KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero 백업 저장소 목록 조회",
                "parameters": [
                    {
                        "description": "Velero connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.VeleroConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/velero/backup-storage-locations": {
            "get": {
                "description": "Retrieve Velero backup storage location list using MinioConfig and KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero 백업 저장 위치 목록 조회",
                "parameters": [
                    {
                        "description": "Velero connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.VeleroConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/velero/backups": {
            "post": {
                "description": "Retrieve Velero backup list using MinioConfig and KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero 백업 목록 조회",
                "parameters": [
                    {
                        "description": "Velero connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.VeleroConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/velero/health": {
            "get": {
                "description": "Validate Velero connection using KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero 연결 상태 확인",
                "parameters": [
                    {
                        "description": "Velero connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.KubeConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection successful",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/velero/restores": {
            "get": {
                "description": "Retrieve Velero restore list using MinioConfig and KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero 복구 목록 조회",
                "parameters": [
                    {
                        "description": "Velero connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.VeleroConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        },
        "/velero/volume-snapshot-locations": {
            "get": {
                "description": "Retrieve Velero volume snapshot location list using MinioConfig and KubeConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "velero"
                ],
                "summary": "Velero 볼륨 스냅샷 위치 목록 조회",
                "parameters": [
                    {
                        "description": "Velero connection configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.VeleroConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_taking_kubemigrate_pkg_models.HelmConfigRequest": {
            "type": "object",
            "required": [
                "chartName",
                "kubeconfig"
            ],
            "properties": {
                "chartName": {
                    "description": "[옵션] 헬름 차트 명",
                    "type": "string",
                    "example": "podinfo"
                },
                "kubeconfig": {
                    "description": "[필수] Base64 인코딩된 KubeConfig 값",
                    "type": "string",
                    "example": "base64 인코딩된 KubeConfig 값"
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.KubeConfig": {
            "type": "object",
            "properties": {
                "kubeconfig": {
                    "description": "원본 KubeConfig 데이터",
                    "type": "string"
                },
                "namespace": {
                    "description": "네임스페이스",
                    "type": "string"
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.KubeConfigRequest": {
            "type": "object",
            "required": [
                "kubeconfig"
            ],
            "properties": {
                "kubeconfig": {
                    "description": "[필수] Base64 인코딩된 KubeConfig 값",
                    "type": "string",
                    "example": "base64 인코딩된 KubeConfig 값"
                },
                "namespace": {
                    "description": "[옵션] 네임스페이스 명 (기본 값 : 'default', 전체 조회  : 'all')",
                    "type": "string",
                    "example": "all"
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.MinioConfig": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "description": "액세스 키",
                    "type": "string"
                },
                "bucketName": {
                    "description": "버킷명",
                    "type": "string"
                },
                "endpoint": {
                    "description": "MinIO 엔드포인트",
                    "type": "string"
                },
                "region": {
                    "description": "리전",
                    "type": "string"
                },
                "secretKey": {
                    "description": "시크릿 키",
                    "type": "string"
                },
                "useSSL": {
                    "description": "SSL 사용 여부",
                    "type": "boolean"
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.MinioConfigRequest": {
            "type": "object",
            "required": [
                "accessKey",
                "endpoint",
                "secretKey",
                "useSSL"
            ],
            "properties": {
                "accessKey": {
                    "description": "[필수] minio accessKey",
                    "type": "string",
                    "example": "your_minio_accessKey"
                },
                "bucketName": {
                    "description": "[옵션] minio Bucket  (기본값: velero)",
                    "type": "string",
                    "example": "velero"
                },
                "endpoint": {
                    "description": "[필수] minio endpoint 주소",
                    "type": "string",
                    "example": "127.0.0.1:9000"
                },
                "region": {
                    "description": "[옵션] minio Region (기본값 : us-east-1)",
                    "type": "string",
                    "example": "us-east-1"
                },
                "secretKey": {
                    "description": "[필수] minio secretKey",
                    "type": "string",
                    "example": "your_minio_secretKey"
                },
                "useSSL": {
                    "description": "[필수] minio useSSL 여부 (false: http / true: https)",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.SwaggerErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.SwaggerSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "github_com_taking_kubemigrate_pkg_models.VeleroConfig": {
            "type": "object",
            "properties": {
                "kubernetes": {
                    "description": "Kubernetes 설정",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.KubeConfig"
                        }
                    ]
                },
                "minio": {
                    "description": "MinIO 설정",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_taking_kubemigrate_pkg_models.MinioConfig"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}